(()=>{"use strict";const t=document.getElementById("gameCanvas"),e=t.getContext("2d"),s=50;class i{constructor(t,e){this.x=t,this.y=e}moveDown(){this.y+=s}moveLeft(){this.x+=-50}moveRight(){this.x+=s}transformClockwise(t,e){this.translate(-t,-e),this.rotateClockwise(),this.translate(t,e)}transformCounterClockwise(t,e){this.translate(-t,-e),this.rotateCounterClockwise(),this.translate(t,e)}translate(t,e){this.x=this.x+t,this.y=this.y+e}rotateClockwise(){const t=this.x,e=this.y;this.x=-e,this.y=t}rotateCounterClockwise(){const t=this.x,e=this.y;this.x=e,this.y=-t}equals(t){return void 0!==t&&t instanceof i&&this.x===t.x&&this.y===t.y}}class a{constructor(t,e){this.point=t,this.fillStyle=e,this.sideLength=s}draw(){e.beginPath(),e.fillStyle=this.fillStyle,e.fillRect(this.point.x,this.point.y,this.sideLength,this.sideLength)}drawPoint(){e.beginPath(),e.strokeStyle="red",e.arc(this.point.x,this.point.y,10,0,2*Math.PI),e.stroke()}drawCoordinates(){e.fillStyle="black",e.fillText(`${this.point.x} | ${this.point.y}`,this.point.x,this.point.y)}drawEdgePoints(){a.drawEdgePoint("yellow",this.point.x,this.point.y),a.drawEdgePoint("blue",this.point.x+s,this.point.y),a.drawEdgePoint("magenta",this.point.x+s,this.point.y+s),a.drawEdgePoint("black",this.point.x,this.point.y+s)}static drawEdgePoint(t,s,i){e.beginPath(),e.strokeStyle=t,e.arc(s,i,10,0,2*Math.PI),e.stroke()}clear(){e.clearRect(this.point.x,this.point.y,this.sideLength,this.sideLength)}equals(t){return void 0!==t&&t instanceof a&&this.sideLength===t.sideLength&&this.point.equals(t.point)}moveDown(){this.clear(),this.point.moveDown(),this.draw()}clearAndMoveDown(){this.clear(),this.point.moveDown()}moveLeft(){this.clear(),this.point.moveLeft(),this.draw()}moveRight(){this.clear(),this.point.moveRight(),this.draw()}transformClockwise(t,e){this.point.transformClockwise(t,e)}transformCounterClockwise(t,e){this.point.transformCounterClockwise(t,e)}isBelowLimit(t){return this.point.y<t}}class r{init(t,e,s){this.pointOfTranslation=e;const i=new a(e,t),r=s.map((e=>new a(e,t)));this.squares=[i,...r],this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX()}getPointOfTranslationX(){return this.getPointOfTranslationX}remove(t){t.hasOwnProperty("point")&&t.point.hasOwnProperty("x")&&t.point.hasOwnProperty("y")&&(this.squares=this.squares.filter((e=>!e.equals(t))),this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX())}draw(){this.squares.forEach((t=>t.draw()))}drawPoints(){this.squares.forEach((t=>t.drawPoint()))}drawCoordinates(){this.squares.forEach((t=>t.drawCoordinates()))}markPointOfTranslation(){e.fillStyle="rgba(120, 230, 244, 0.2)",e.beginPath(),e.arc(this.pointOfTranslation.x,this.pointOfTranslation.y,10,0,2*Math.PI),e.stroke()}drawEdgePoints(){this.squares.forEach((t=>{t.drawEdgePoints()}))}clear(){this.squares.forEach((t=>t.clear()))}rotateClockwise(){this.squares.forEach((t=>{t.transformClockwise(this.pointOfTranslation.x,this.pointOfTranslation.y)})),this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX()}rotateCounterClockwise(){this.squares.forEach((t=>{t.transformCounterClockwise(this.pointOfTranslation.x,this.pointOfTranslation.y)})),this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX()}hasPoint(t){const e=this.squares.map((t=>new i(t.point.x,t.point.y))).filter((e=>e.equals(t)));return void 0!==e&&e.length&&0!==e.length&&e.equals(t)}hasCommonPointWith(t){for(const e of this.squares)for(const s of t.squares)if(e.equals(s))return!0;return!1}moveDown(){this.clear(),this.squares.forEach((t=>t.moveDown())),this.largestY=this.calculateLargestY(),this.draw()}moveLeft(){this.clear(),this.squares.forEach((t=>t.moveLeft())),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX(),this.draw()}moveRight(){this.clear(),this.squares.forEach((t=>t.moveRight())),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX(),this.draw()}calculateLargestY(){return this.squares.map((t=>t.point.y)).sort().pop()}calculateSmallestX(){return this.squares.map((t=>t.point.x)).sort().shift()}calculateLargestX(){return this.squares.map((t=>t.point.x)).sort().pop()}getLargestY(){return this.largestY}getSmallestX(){return this.smallestX}getLargestX(){return this.largestX}clearAndMoveSquaresBelowYLimit(t){let e=!1;return this.squares.forEach((s=>{s.isBelowLimit(t)&&(s.clearAndMoveDown(),e=!0)})),e}}const n={I:class extends r{constructor(t){super();const e=new i(t,0),a=[new i(t-100,0),new i(t-s,0),new i(t+s,0)];super.init("yellowgreen",e,a)}},O:class extends r{constructor(t){super();const e=new i(t-s,0),a=new i(t,0),r=new i(t-s,s),n=new i(t,s),h=[e,a,r];super.init("thistle",n,h)}rotateClockwise(){}rotateCounterClockwise(){}},L:class extends r{constructor(t){super();const e=new i(t-100,0),a=new i(t-s,0),r=[e,new i(t,0),new i(t-100,s)];super.init("lightblue",a,r)}},J:class extends r{constructor(t){super();const e=new i(t-s,0),a=new i(t,0),r=[e,new i(t+s,0),new i(t+s,s)];super.init("darksalmon",a,r)}},S:class extends r{constructor(t){super();const e=new i(t-s,0),a=new i(t,0),r=new i(t-100,s),n=new i(t-s,s),h=[e,a,r];super.init("khaki",n,h)}},Z:class extends r{constructor(t){super();const e=new i(t-s,0),a=new i(t,0),r=new i(t,s),n=[e,a,new i(t+s,s)];super.init("tan",r,n)}},T:class extends r{constructor(t){super();const e=new i(t-s,s),a=new i(t,s),r=[e,new i(t+s,s),new i(t,0)];super.init("lightgrey",a,r)}}};class h{constructor(){this.shapes=[],this.movingShape=void 0}moveShapeDown(){this.thereIsRoomToMoveDown()&&this.movingShape.moveDown()}moveShapeLeft(){this.thereIsRoomToMoveLeft()&&this.movingShape.moveLeft()}moveShapeRight(){this.thereIsRoomToMoveRight()&&this.movingShape.moveRight()}moveShapeToBottom(){for(;this.thereIsRoomToMoveDown();)this.moveShapeDown()}noOtherShapeIsInTheWayDown(){const t=this.movingShape.squares.map((t=>t.point));for(const e of this.shapes)if(e!==this.movingShape){const i=e.squares.map((t=>t.point));if(t.filter((t=>i.some((e=>e.x==t.x&&e.y==t.y+s)))).length>0)return!1}return!0}noOtherShapeIsInTheWayLeft(){const t=this.movingShape.squares.map((t=>t.point));for(const e of this.shapes)if(e!==this.movingShape){const i=e.squares.map((t=>t.point));if(t.filter((t=>i.some((e=>e.x+s==t.x&&e.y==t.y)))).length>0)return!1}return!0}noOtherShapeIsInTheWayRight(){const t=this.movingShape.squares.map((t=>t.point));for(const e of this.shapes)if(e!==this.movingShape){const i=e.squares.map((t=>t.point));if(t.filter((t=>i.some((e=>e.x==t.x+s&&e.y==t.y)))).length>0)return!1}return!0}rotateShape(){this.movingShape.clear(),this.movingShape.rotateClockwise(),this.allPointsFitInsideGrid()&&this.noOtherShapeIsInTheWay(this.movingShape)||this.movingShape.rotateCounterClockwise(),this.movingShape.draw()}allPointsFitInsideGrid(){return this.movingShape.squares.map((t=>t.point.x)).every((e=>e>=0&&e<=t.width-s))&&this.movingShape.squares.map((t=>t.point.y)).every((e=>e>=0&&e<=t.height-s))}thereIsRoomToMoveDown(){return this.movingShape.getLargestY()+s<t.height&&this.noOtherShapeIsInTheWayDown()}thereIsRoomToMoveLeft(){return this.movingShape.getSmallestX()-s>=0&&this.noOtherShapeIsInTheWayLeft()}thereIsRoomToMoveRight(){return this.movingShape.getLargestX()+s<t.width&&this.noOtherShapeIsInTheWayRight()}removeFullRows(){const e=t.width/s,i=t.height/s;let a=0;for(let t=0;t<i;t+=1){const i=new Map;for(const e of this.shapes)for(const a of e.squares)a.point.y===t*s&&i.set(a,e);if(i.size===e){a+=1;for(const[t,e]of i)t.clear(),e.remove(t);this.shiftDownward(t)}}return a}shiftDownward(t){const e=t*s;for(const t of this.shapes)t.clearAndMoveSquaresBelowYLimit(e)&&t.draw()}noOtherShapeIsInTheWay(t){for(const e of this.shapes)if(e!==t&&e.hasCommonPointWith(t))return!1;return!0}drawLines(){const i=t.height/s;for(let a=1;a<i;a+=1)e.strokeStyle="black",e.beginPath(),e.moveTo(0,a*s),e.lineTo(t.width,a*s),e.stroke()}drawAllPoints(){for(const t of this.shapes)t.drawPoints()}drawCoordinates(){for(const t of this.shapes)t.drawCoordinates()}}class o{constructor(){this.high=o.getHighScore(),document.getElementById("high-score").innerText=this.high,this.current=0}static getHighScore(){let t=localStorage.getItem("tetris-high");return void 0===t&&(t=0),t}static calculateIncrease(t){return 2**t+2}increment(t){this.current+=t,document.getElementById("current-score").innerText=this.current}get(){return this.current}set(t){this.current=t}submit(){this.current>this.high&&(localStorage.setItem("tetris-high",this.current),document.getElementById("high-score").innerText=this.current)}}class l{constructor(){this.value=0,this.delay=1e3}increase(){this.value+=1,this.delay=1e3-100*this.value}increaseIfNecessary(t){return t>this.value&&this.increase(),this.value}}class c{constructor(){this.isPaused=!1,c.setCanvasWidth(),c.setCanvasHeight(),window.setTimeout((()=>{document.getElementById("loading").hidden=!0,document.getElementById("container").style.display="grid"}),200),this.grid=new h;const t=c.generateShape();this.grid.shapes.push(t),this.grid.movingShape=t,t.draw(),this.score=new o,this.speed=new l,document.getElementById("current-speed").innerText=this.speed.value,this.SCORE_PER_SPEED_INCREASE=50,this.MAX_SPEED=9,this.paused=t=>{if(this.grid.movingShape)switch(t.key){case"p":this.pause()}},this.keyPressed=t=>{if(this.grid.movingShape)switch(t.key){case"j":this.grid.moveShapeLeft();break;case"k":this.grid.rotateShape();break;case"l":this.grid.moveShapeRight();break;case" ":if(window.clearInterval(this.heartbeatInterval),this.heartbeatInterval=void 0,this.grid.moveShapeToBottom(),!this.grid.thereIsRoomToMoveDown()){this.grid.movingShape=void 0;const t=this.grid.removeFullRows();t>0&&(this.requestScoreIncrease(t),this.requestSpeedIncrease());const e=c.generateShape();this.grid.noOtherShapeIsInTheWay(e)?(this.grid.shapes.push(e),e.draw(),this.grid.movingShape=e):this.end()}this.grid.movingShape&&void 0===this.heartbeatInterval&&(this.heartbeatInterval=window.setInterval((()=>e.heartbeat()),e.speed.delay));break;case"1":this.grid.drawAllPoints();break;case"2":this.grid.drawCoordinates();break;case"3":this.grid.movingShape.drawEdgePoints();break;case"4":this.grid.drawLines()}},this.keyHandler=this.keyPressed.bind(this),window.addEventListener("keypress",this.keyHandler),this.pauseKeyHandler=this.paused.bind(this),window.addEventListener("keypress",this.pauseKeyHandler);const e=this;this.heartbeatInterval=window.setInterval((()=>e.heartbeat()),e.speed.delay)}static setCanvasWidth(){500<window.screen.availWidth&&(t.width=500)}static setCanvasHeight(){let e=window.screen.availHeight;e%100!=0&&(e-=e%100),e-=100,e>1e3&&(e=1e3),t.height=e}static generateShape(){const e=Object.values(n);return new(0,e[Math.round(Math.random()*(e.length-1))])(t.width/2)}heartbeat(){if(!this.grid.thereIsRoomToMoveDown()){this.grid.movingShape=void 0;const t=this.grid.removeFullRows();t>0&&(this.requestScoreIncrease(t),this.requestSpeedIncrease());const e=c.generateShape();this.grid.noOtherShapeIsInTheWay(e)?(this.grid.shapes.push(e),e.draw(),this.grid.movingShape=e):this.end()}this.grid.movingShape&&this.grid.thereIsRoomToMoveDown()&&this.grid.moveShapeDown()}end(){this.score.submit(),c.showGameOverText(),window.clearInterval(this.heartbeatInterval),window.removeEventListener("keypress",this.keyHandler),window.removeEventListener("keypress",this.pauseKeyHandler)}requestSpeedIncrease(){if(this.speed.value<this.MAX_SPEED){const t=this.speed.value,e=Math.trunc(this.score.get()/this.SCORE_PER_SPEED_INCREASE);if(this.speed.increaseIfNecessary(e)>t){window.clearInterval(this.heartbeatInterval);const t=this;this.heartbeatInterval=window.setInterval((()=>t.heartbeat()),t.speed.delay),document.getElementById("current-speed").innerText=this.speed.value}}}requestScoreIncrease(t){this.score.increment(t)}pause(){if(this.isPaused){window.addEventListener("keypress",this.keyHandler);const t=this;this.heartbeatInterval=window.setInterval((()=>t.heartbeat()),this.speed.delay)}else window.clearInterval(this.heartbeatInterval),window.removeEventListener("keypress",this.keyHandler);this.isPaused=!this.isPaused}static showGameOverText(){document.getElementById("gameOverContainer").hidden=!1}}new c})();
//# sourceMappingURL=main.js.map