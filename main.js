(()=>{"use strict";const t=document.getElementById("gameCanvas"),e=50;class s{constructor(t,e){this.x=t,this.y=e}moveDown(){this.y+=e}moveLeft(){this.x+=-50}moveRight(){this.x+=e}transformClockwise(t,e){this.translate(-t,-e),this.rotateClockwise(),this.translate(t,e)}transformCounterClockwise(t,e){this.translate(-t,-e),this.rotateCounterClockwise(),this.translate(t,e)}translate(t,e){this.x=this.x+t,this.y=this.y+e}rotateClockwise(){const t=this.x,e=this.y;this.x=-e,this.y=t}rotateCounterClockwise(){const t=this.x,e=this.y;this.x=e,this.y=-t}equals(t){return void 0!==t&&t instanceof s&&this.x===t.x&&this.y===t.y}}class i{constructor(t,s,i){this.point=t,this.fillStyle=s,this.context=i,this.sideLength=e}draw(){this.context.beginPath(),this.context.fillStyle=this.fillStyle,this.context.fillRect(this.point.x,this.point.y,this.sideLength,this.sideLength)}drawPoint(){this.context.beginPath(),this.context.strokeStyle="red",this.context.arc(this.point.x,this.point.y,10,0,2*Math.PI),this.context.stroke()}drawCoordinates(){this.context.fillStyle="black",this.context.fillText(`${this.point.x} | ${this.point.y}`,this.point.x,this.point.y)}drawEdgePoints(){this.drawEdgePoint("yellow",this.point.x,this.point.y),this.drawEdgePoint("blue",this.point.x+e,this.point.y),this.drawEdgePoint("magenta",this.point.x+e,this.point.y+e),this.drawEdgePoint("black",this.point.x,this.point.y+e)}drawEdgePoint(t,e,s){this.context.beginPath(),this.context.strokeStyle=t,this.context.arc(e,s,10,0,2*Math.PI),this.context.stroke()}clear(){this.context.clearRect(this.point.x,this.point.y,this.sideLength,this.sideLength)}equals(t){return void 0!==t&&t instanceof i&&this.sideLength===t.sideLength&&this.point.equals(t.point)}moveDown(){this.clear(),this.point.moveDown(),this.draw()}clearAndMoveDown(){this.clear(),this.point.moveDown()}moveLeft(){this.clear(),this.point.moveLeft(),this.draw()}moveRight(){this.clear(),this.point.moveRight(),this.draw()}transformClockwise(t,e){this.point.transformClockwise(t,e)}transformCounterClockwise(t,e){this.point.transformCounterClockwise(t,e)}isBelowLimit(t){return this.point.y<t}}class a{init(t,e,s,a){this.pointOfTranslation=e;const n=new i(e,t,a),h=s.map((e=>new i(e,t,a)));this.squares=[n,...h],this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX(),this.context=a}getPointOfTranslationX(){return this.getPointOfTranslationX}remove(t){t.hasOwnProperty("point")&&t.point.hasOwnProperty("x")&&t.point.hasOwnProperty("y")&&(this.squares=this.squares.filter((e=>!e.equals(t))),this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX())}draw(){this.squares.forEach((t=>t.draw()))}drawPoints(){this.squares.forEach((t=>t.drawPoint()))}drawCoordinates(){this.squares.forEach((t=>t.drawCoordinates()))}markPointOfTranslation(){context.fillStyle="rgba(120, 230, 244, 0.2)",context.beginPath(),context.arc(this.pointOfTranslation.x,this.pointOfTranslation.y,10,0,2*Math.PI),context.stroke()}drawEdgePoints(){this.squares.forEach((t=>{t.drawEdgePoints()}))}clear(){this.squares.forEach((t=>t.clear()))}rotateClockwise(){this.squares.forEach((t=>{t.transformClockwise(this.pointOfTranslation.x,this.pointOfTranslation.y)})),this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX()}rotateCounterClockwise(){this.squares.forEach((t=>{t.transformCounterClockwise(this.pointOfTranslation.x,this.pointOfTranslation.y)})),this.largestY=this.calculateLargestY(),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX()}hasPoint(t){const e=this.squares.map((t=>new s(t.point.x,t.point.y))).filter((e=>e.equals(t)));return void 0!==e&&e.length&&0!==e.length&&e.equals(t)}hasCommonPointWith(t){for(const e of this.squares)for(const s of t.squares)if(e.equals(s))return!0;return!1}moveDown(){this.clear(),this.squares.forEach((t=>t.moveDown())),this.largestY=this.calculateLargestY(),this.draw()}moveLeft(){this.clear(),this.squares.forEach((t=>t.moveLeft())),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX(),this.draw()}moveRight(){this.clear(),this.squares.forEach((t=>t.moveRight())),this.smallestX=this.calculateSmallestX(),this.largestX=this.calculateLargestX(),this.draw()}calculateLargestY(){return this.squares.map((t=>t.point.y)).sort().pop()}calculateSmallestX(){return this.squares.map((t=>t.point.x)).sort().shift()}calculateLargestX(){return this.squares.map((t=>t.point.x)).sort().pop()}getLargestY(){return this.largestY}getSmallestX(){return this.smallestX}getLargestX(){return this.largestX}clearAndMoveSquaresBelowYLimit(t){let e=!1;return this.squares.forEach((s=>{s.isBelowLimit(t)&&(s.clearAndMoveDown(),e=!0)})),e}}const n={I:class extends a{constructor(t,i){super();const a=new s(t,0),n=[new s(t-100,0),new s(t-e,0),new s(t+e,0)];super.init("yellowgreen",a,n,i)}},O:class extends a{constructor(t,i){super();const a=new s(t-e,0),n=new s(t,0),h=new s(t-e,e),r=new s(t,e),o=[a,n,h];super.init("thistle",r,o,i)}rotateClockwise(){}rotateCounterClockwise(){}},L:class extends a{constructor(t,i){super();const a=new s(t-100,0),n=new s(t-e,0),h=[a,new s(t,0),new s(t-100,e)];super.init("lightblue",n,h,i)}},J:class extends a{constructor(t,i){super();const a=new s(t-e,0),n=new s(t,0),h=[a,new s(t+e,0),new s(t+e,e)];super.init("darksalmon",n,h,i)}},S:class extends a{constructor(t,i){super();const a=new s(t-e,0),n=new s(t,0),h=new s(t-100,e),r=new s(t-e,e),o=[a,n,h];super.init("khaki",r,o,i)}},Z:class extends a{constructor(t,i){super();const a=new s(t-e,0),n=new s(t,0),h=new s(t,e),r=[a,n,new s(t+e,e)];super.init("tan",h,r,i)}},T:class extends a{constructor(t,i){super();const a=new s(t-e,e),n=new s(t,e),h=[a,new s(t+e,e),new s(t,0)];super.init("lightgrey",n,h,i)}}};class h{constructor(t,e){this.canvas=t,this.context=e,this.shapes=[],this.movingShape=void 0}moveShapeDown(){this.thereIsRoomToMoveDown()&&this.movingShape.moveDown()}moveShapeLeft(){this.thereIsRoomToMoveLeft()&&this.movingShape.moveLeft()}moveShapeRight(){this.thereIsRoomToMoveRight()&&this.movingShape.moveRight()}moveShapeToBottom(){for(;this.thereIsRoomToMoveDown();)this.moveShapeDown()}noOtherShapeIsInTheWayDown(){const t=this.movingShape.squares.map((t=>t.point));for(const s of this.shapes)if(s!==this.movingShape){const i=s.squares.map((t=>t.point));if(t.filter((t=>i.some((s=>s.x==t.x&&s.y==t.y+e)))).length>0)return!1}return!0}noOtherShapeIsInTheWayLeft(){const t=this.movingShape.squares.map((t=>t.point));for(const s of this.shapes)if(s!==this.movingShape){const i=s.squares.map((t=>t.point));if(t.filter((t=>i.some((s=>s.x+e==t.x&&s.y==t.y)))).length>0)return!1}return!0}noOtherShapeIsInTheWayRight(){const t=this.movingShape.squares.map((t=>t.point));for(const s of this.shapes)if(s!==this.movingShape){const i=s.squares.map((t=>t.point));if(t.filter((t=>i.some((s=>s.x==t.x+e&&s.y==t.y)))).length>0)return!1}return!0}rotateShape(){this.movingShape.clear(),this.movingShape.rotateClockwise(),this.allPointsFitInsideGrid()&&this.noOtherShapeIsInTheWay(this.movingShape)||this.movingShape.rotateCounterClockwise(),this.movingShape.draw()}allPointsFitInsideGrid(){return this.movingShape.squares.map((t=>t.point.x)).every((t=>t>=0&&t<=this.canvas.width-e))&&this.movingShape.squares.map((t=>t.point.y)).every((t=>t>=0&&t<=this.canvas.height-e))}thereIsRoomToMoveDown(){return this.movingShape.getLargestY()+e<this.canvas.height&&this.noOtherShapeIsInTheWayDown()}thereIsRoomToMoveLeft(){return this.movingShape.getSmallestX()-e>=0&&this.noOtherShapeIsInTheWayLeft()}thereIsRoomToMoveRight(){return this.movingShape.getLargestX()+e<this.canvas.width&&this.noOtherShapeIsInTheWayRight()}removeFullRows(){const t=this.canvas.width/e,s=this.canvas.height/e;let i=0;for(let a=0;a<s;a+=1){const s=new Map;for(const t of this.shapes)for(const i of t.squares)i.point.y===a*e&&s.set(i,t);if(s.size===t){i+=1;for(const[t,e]of s)t.clear(),e.remove(t);this.shiftDownward(a)}}return i}shiftDownward(t){const s=t*e;for(const t of this.shapes)t.clearAndMoveSquaresBelowYLimit(s)&&t.draw()}noOtherShapeIsInTheWay(t){for(const e of this.shapes)if(e!==t&&e.hasCommonPointWith(t))return!1;return!0}drawLines(){const t=this.canvas.height/e;for(let s=1;s<t;s+=1)this.context.strokeStyle="black",this.context.beginPath(),this.context.moveTo(0,s*e),this.context.lineTo(this.canvas.width,s*e),this.context.stroke()}drawAllPoints(){for(const t of this.shapes)t.drawPoints()}drawCoordinates(){for(const t of this.shapes)t.drawCoordinates()}}class r{constructor(){this.high=r.getHighScore(),document.getElementById("high-score").innerText=this.high,this.current=0}static getHighScore(){let t=localStorage.getItem("tetris-high");return void 0===t&&(t=0),t}static calculateIncrease(t){return 2**t+2}increment(t){this.current+=t,document.getElementById("current-score").innerText=this.current}get(){return this.current}set(t){this.current=t}submit(){this.current>this.high&&(localStorage.setItem("tetris-high",this.current),document.getElementById("high-score").innerText=this.current)}}class o{constructor(){this.value=0,this.delay=1e3}increase(){this.value+=1,this.delay=1e3-100*this.value}increaseIfNecessary(t){return t>this.value&&this.increase(),this.value}}class c{constructor(t){this.canvas=t,this.context=t.getContext("2d"),this.isPaused=!1,this.setCanvasWidth(),this.setCanvasHeight(),window.setTimeout((()=>{document.getElementById("loading").hidden=!0,document.getElementById("container").style.display="grid"}),200),this.grid=new h(t,this.context);const e=this.generateShape();this.grid.shapes.push(e),this.grid.movingShape=e,e.draw(),this.score=new r,this.speed=new o,document.getElementById("current-speed").innerText=this.speed.value,this.SCORE_PER_SPEED_INCREASE=50,this.MAX_SPEED=9,this.paused=t=>{if(this.grid.movingShape)switch(t.key){case"p":this.pause()}},this.keyPressed=t=>{if(this.grid.movingShape)switch(t.key){case"j":this.grid.moveShapeLeft();break;case"k":this.grid.rotateShape();break;case"l":this.grid.moveShapeRight();break;case" ":if(window.clearInterval(this.heartbeatInterval),this.heartbeatInterval=void 0,this.grid.moveShapeToBottom(),!this.grid.thereIsRoomToMoveDown()){this.grid.movingShape=void 0;const t=this.grid.removeFullRows();t>0&&(this.requestScoreIncrease(t),this.requestSpeedIncrease());const e=this.generateShape();this.grid.noOtherShapeIsInTheWay(e)?(this.grid.shapes.push(e),e.draw(),this.grid.movingShape=e):this.end()}this.grid.movingShape&&void 0===this.heartbeatInterval&&(this.heartbeatInterval=window.setInterval((()=>s.heartbeat()),s.speed.delay));break;case"1":this.grid.drawAllPoints();break;case"2":this.grid.drawCoordinates();break;case"3":this.grid.movingShape.drawEdgePoints();break;case"4":this.grid.drawLines()}},this.keyHandler=this.keyPressed.bind(this),window.addEventListener("keypress",this.keyHandler),this.pauseKeyHandler=this.paused.bind(this),window.addEventListener("keypress",this.pauseKeyHandler);const s=this;this.heartbeatInterval=window.setInterval((()=>s.heartbeat()),s.speed.delay)}setCanvasWidth(){500<window.screen.availWidth&&(this.canvas.width=500)}setCanvasHeight(){let t=window.screen.availHeight;t%100!=0&&(t-=t%100),t-=100,t>1e3&&(t=1e3),this.canvas.height=t}generateShape(){const t=Object.values(n);return new(0,t[Math.round(Math.random()*(t.length-1))])(this.canvas.width/2,this.context)}heartbeat(){if(!this.grid.thereIsRoomToMoveDown()){this.grid.movingShape=void 0;const t=this.grid.removeFullRows();t>0&&(this.requestScoreIncrease(t),this.requestSpeedIncrease());const e=this.generateShape();this.grid.noOtherShapeIsInTheWay(e)?(this.grid.shapes.push(e),e.draw(),this.grid.movingShape=e):this.end()}this.grid.movingShape&&this.grid.thereIsRoomToMoveDown()&&this.grid.moveShapeDown()}end(){this.score.submit(),c.showGameOverText(),window.clearInterval(this.heartbeatInterval),window.removeEventListener("keypress",this.keyHandler),window.removeEventListener("keypress",this.pauseKeyHandler)}requestSpeedIncrease(){if(this.speed.value<this.MAX_SPEED){const t=this.speed.value,e=Math.trunc(this.score.get()/this.SCORE_PER_SPEED_INCREASE);if(this.speed.increaseIfNecessary(e)>t){window.clearInterval(this.heartbeatInterval);const t=this;this.heartbeatInterval=window.setInterval((()=>t.heartbeat()),t.speed.delay),document.getElementById("current-speed").innerText=this.speed.value}}}requestScoreIncrease(t){this.score.increment(t)}pause(){if(this.isPaused){window.addEventListener("keypress",this.keyHandler);const t=this;this.heartbeatInterval=window.setInterval((()=>t.heartbeat()),this.speed.delay)}else window.clearInterval(this.heartbeatInterval),window.removeEventListener("keypress",this.keyHandler);this.isPaused=!this.isPaused}static showGameOverText(){document.getElementById("gameOverContainer").hidden=!1}}new c(t)})();
//# sourceMappingURL=main.js.map